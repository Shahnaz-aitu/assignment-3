package controllers;

import controllers.interfaces.IHotelController;
import models.Hotel;
import models.Permission;
import models.Room;
import models.User;
import repositories.interfaces.IHotelRepository;
import repositories.interfaces.IRoomRepository;

import java.util.ArrayList;
import java.util.List;

public class HotelController implements IHotelController {
    private final IHotelRepository hotelRepository;
    private final IRoomRepository roomRepository;

    public HotelController(IHotelRepository hotelRepository, IRoomRepository roomRepository) {
        this.hotelRepository = hotelRepository;
        this.roomRepository = roomRepository;
    }

    @Override
    public List<Hotel> getHotelsByCity(String city, User currentUser) {
        if (!currentUser.hasPermission(Permission.VIEW_HOTELS)) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–µ–ª–µ–π");
            return new ArrayList<>();
        }
        return hotelRepository.getHotelsByCity(city);
    }

    @Override
    public void showAllHotels() {
        List<Hotel> hotels = hotelRepository.getAllHotels();
        if (hotels.isEmpty()) {
            System.out.println("‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –æ—Ç–µ–ª–µ–π.");
        } else {
            System.out.println("\n=== üè® –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ç–µ–ª–µ–π ===");
            for (Hotel hotel : hotels) {
                System.out.println("- " + hotel.getName() + " | –ì–æ—Ä–æ–¥: " + hotel.getCity() +
                        " | –†–µ–π—Ç–∏–Ω–≥: " + hotel.getRank() + " | –õ–æ–∫–∞—Ü–∏—è: " + hotel.getLocation());
            }
        }
    }

    @Override
    public List<Room> getRoomsByHotelId(int hotelId, User user) {  // ‚úÖ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –º–µ—Ç–æ–¥–∞ –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        if (!user.hasPermission(Permission.VIEW_ROOMS)) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–æ–º–µ—Ä–æ–≤");
            return new ArrayList<>();
        }
        return roomRepository.getRoomsByHotelId(hotelId);
    }

    public void showAllRoomsByHotelId(int hotelId, User user) {
        List<Room> rooms = getRoomsByHotelId(hotelId, user);
        if (rooms.isEmpty()) {
            System.out.println("‚ùå –í —ç—Ç–æ–º –æ—Ç–µ–ª–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤.");
            return;
        }

        System.out.println("\n=== üè® –î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –≤ –æ—Ç–µ–ª–µ ===");
        for (Room room : rooms) {
            System.out.println("- –ù–æ–º–µ—Ä ID: " + room.getId() + " | –¢–∏–ø: " + room.getType() +
                    " | –¶–µ–Ω–∞: " + room.getPrice() + " | –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: " + (room.isAvailable() ? "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω" : "‚ùå –ó–∞–Ω—è—Ç"));
        }
    }
}
