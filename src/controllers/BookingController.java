package controllers;

import controllers.interfaces.IBookingController;
import models.*;
import repositories.interfaces.*;

import java.util.Date;
import java.util.List;

public class BookingController implements IBookingController {
    private final IBookingRepository bookingRepository;
    private final IUserRepository userRepository;
    private final IRoomRepository roomRepository;
    private final IHotelRepository hotelRepository;

    public BookingController(
            IBookingRepository bookingRepository,
            IUserRepository userRepository,
            IRoomRepository roomRepository,
            IHotelRepository hotelRepository) {
        this.bookingRepository = bookingRepository;
        this.userRepository = userRepository;
        this.roomRepository = roomRepository;
        this.hotelRepository = hotelRepository;
    }

    @Override
    public boolean createBooking(String userEmail, int roomId, Date checkIn, Date checkOut) {
        System.out.println("üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...");
        User user = userRepository.getUserByEmail(userEmail);
        if (user == null) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.");
            return false;
        }

        // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∞–≤–æ –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        if (!user.hasPermission(Permission.CREATE_BOOKING)) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞: —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ.");
            return false;
        }

        System.out.println("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: " + user.getName());

        // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞
        System.out.println("üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–∞...");
        Room room = roomRepository.getRoomById(roomId);
        if (room == null) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞: –Ω–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.");
            return false;
        }

        // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –Ω–æ–º–µ—Ä–∞
        if (!roomRepository.isRoomAvailable(roomId, checkIn, checkOut)) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞: –Ω–æ–º–µ—Ä —É–∂–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω –Ω–∞ —ç—Ç–∏ –¥–∞—Ç—ã.");
            return false;
        }

        System.out.println("‚úÖ –ù–æ–º–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω: " + room.getRoomType() + " | –¶–µ–Ω–∞: " + room.getPrice());

        // ‚úÖ –°–æ–∑–¥–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        Booking booking = new Booking(user.getId(), roomId, checkIn, checkOut);
        boolean success = bookingRepository.createBooking(booking);

        if (success) {
            System.out.println("‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!");
        } else {
            System.out.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.");
        }

        return success;
    }

    public void showUserBookings(String userEmail) {
        System.out.println("üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...");
        User user = userRepository.getUserByEmail(userEmail);
        if (user == null) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.");
            return;
        }

        List<BookingDetails> bookings = bookingRepository.getUserBookings(user.getId());
        if (bookings.isEmpty()) {
            System.out.println("‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π.");
            return;
        }

        System.out.println("üìå –í–∞—à–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:");
        for (BookingDetails booking : bookings) {
            System.out.println("- –ù–æ–º–µ—Ä " + booking.getRoom().getRoomType() + " –≤ " +
                    booking.getHotel().getName() + " —Å " +
                    booking.getBooking().getCheckIn() + " –ø–æ " + booking.getBooking().getCheckOut());
        }
    }

    public void showFullBookingDescription(int bookingId) {
        System.out.println("üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å ID: " + bookingId);
        BookingDetails details = bookingRepository.getFullBookingDescription(bookingId);
        if (details == null) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞: –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.");
            return;
        }

        System.out.println("üìå –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏:");
        System.out.println("- ID –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: " + details.getBooking().getId());
        System.out.println("- –ì–æ—Å—Ç—å: " + (details.getUser() != null ? details.getUser().getName() + " (Email: " + details.getUser().getEmail() + ")" : "Unknown"));
        System.out.println("- –ù–æ–º–µ—Ä: " + (details.getRoom() != null ? details.getRoom().getRoomType() : "Unknown") + ", –¶–µ–Ω–∞: " + (details.getRoom() != null ? details.getRoom().getPrice() : "0"));
        System.out.println("- –û—Ç–µ–ª—å: " + (details.getHotel() != null ? details.getHotel().getName() : "Unknown"));
        System.out.println("- –î–∞—Ç—ã: —Å " + details.getBooking().getCheckIn() + " –ø–æ " + details.getBooking().getCheckOut());
    }
}

